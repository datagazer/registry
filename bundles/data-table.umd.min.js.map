{"version":3,"sources":["ng://@datagazer/data-table/lib/components/table/content-cell/content-cell.component.ts","ng://@datagazer/data-table/lib/components/table/content-row/content-row.component.ts","ng://@datagazer/data-table/lib/components/table/footer-cell/footer-cell.component.ts","ng://@datagazer/data-table/lib/components/table/footer-row/footer-row.component.ts","ng://@datagazer/data-table/lib/components/table/header-cell/header-cell.component.ts","ng://@datagazer/data-table/lib/components/table/header-row/header-row.component.ts","ng://@datagazer/data-table/lib/components/table/table.component.ts","ng://@datagazer/data-table/lib/directives/column-def.directive.ts","ng://@datagazer/data-table/lib/directives/content-cell-def.directive.ts","ng://@datagazer/data-table/lib/directives/content-cell-outlet.directive.ts","ng://@datagazer/data-table/lib/directives/content-row-def.directive.ts","ng://@datagazer/data-table/lib/directives/content-row-outlet.directive.ts","ng://@datagazer/data-table/lib/directives/footer-cell-def.directive.ts","ng://@datagazer/data-table/lib/directives/footer-cell-outlet.directive.ts","ng://@datagazer/data-table/lib/directives/footer-row-def.directive.ts","ng://@datagazer/data-table/lib/directives/footer-row-outlet.directive.ts","ng://@datagazer/data-table/lib/directives/header-cell-def.directive.ts","ng://@datagazer/data-table/lib/directives/header-cell-outlet.directive.ts","ng://@datagazer/data-table/lib/directives/header-row-def.directive.ts","ng://@datagazer/data-table/lib/directives/header-row-outlet.directive.ts","ng://@datagazer/data-table/lib/data-table.module.ts"],"names":["ContentCellComponent","_super","__extends","Component","args","selector","template","providers","provide","CdkContentCell","useExisting","ContentRowComponent","CdkContentRow","FooterCellComponent","CdkFooterCell","FooterRowComponent","CdkFooterRow","HeaderCellComponent","CdkHeaderCell","HeaderRowComponent","CdkHeaderRow","TableComponent","Object","defineProperty","prototype","columns","Array","from","this","_contentHeaderRowDefs","first","_contentColumnDefs","filter","_a","column","name","includes","map","size","join","updateStickyStyles","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","updateStickyColumnStyles","ngAfterViewInit","CdkTable","HostBinding","HostListener","ColumnDefDirective","_this","apply","arguments","sticky","stickyEnd","Directive","CdkColumnDef","Input","ContentCellDefDirective","CdkContentCellDef","ContentCellOutletDirective","CdkContentCellOutlet","ContentRowDefDirective","when","CdkContentRowDef","ContentRowOutletDirective","ContentRowOutlet","FooterCellDefDirective","CdkFooterCellDef","FooterCellOutletDirective","CdkFooterCellOutlet","FooterRowDefDirective","CdkFooterRowDef","FooterRowOutletDirective","FooterRowOutlet","HeaderCellDefDirective","CdkHeaderCellDef","HeaderCellOutletDirective","CdkHeaderCellOutlet","HeaderRowDefDirective","CdkHeaderRowDef","HeaderRowOutletDirective","HeaderRowOutlet","modules","FoundationModule","components","directives","DataTableModule","NgModule","imports","__spread","declarations","exports"],"mappings":"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","sourcesContent":["import { CdkCell as CdkContentCell } from '@angular/cdk/table';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'td[dg-content-cell]',\n  templateUrl: './content-cell.component.html',\n  styleUrls: ['./content-cell.component.scss'],\n\n  providers: [\n    { provide: CdkContentCell, useExisting: ContentCellComponent }\n  ]\n})\nexport class ContentCellComponent extends CdkContentCell {}\n","import { CdkRow as CdkContentRow } from '@angular/cdk/table';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'tr[dg-content-row]',\n  templateUrl: './content-row.component.html',\n  styleUrls: ['./content-row.component.scss'],\n\n  providers: [\n    { provide: CdkContentRow, useExisting: ContentRowComponent }\n  ]\n})\nexport class ContentRowComponent extends CdkContentRow {}\n","import { CdkFooterCell } from '@angular/cdk/table';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'td[dg-footer-cell]',\n  templateUrl: './footer-cell.component.html',\n  styleUrls: ['./footer-cell.component.scss'],\n\n  providers: [\n    { provide: CdkFooterCell, useExisting: FooterCellComponent }\n  ]\n})\nexport class FooterCellComponent extends CdkFooterCell {}\n","import { CdkFooterRow } from '@angular/cdk/table';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'tr[dg-footer-row]',\n  templateUrl: './footer-row.component.html',\n  styleUrls: ['./footer-row.component.scss'],\n\n  providers: [\n    { provide: CdkFooterRow, useExisting: FooterRowComponent }\n  ]\n})\nexport class FooterRowComponent extends CdkFooterRow {}\n","import { CdkHeaderCell } from '@angular/cdk/table';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'th[dg-header-cell]',\n  templateUrl: './header-cell.component.html',\n  styleUrls: ['./header-cell.component.scss'],\n\n  providers: [\n    { provide: CdkHeaderCell, useExisting: HeaderCellComponent }\n  ]\n})\nexport class HeaderCellComponent extends CdkHeaderCell {}\n","import { CdkHeaderRow } from '@angular/cdk/table';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'tr[dg-header-row]',\n  templateUrl: './header-row.component.html',\n  styleUrls: ['./header-row.component.scss'],\n\n  providers: [\n    { provide: CdkHeaderRow, useExisting: HeaderRowComponent }\n  ]\n})\nexport class HeaderRowComponent extends CdkHeaderRow {}\n","import { CdkTable } from '@angular/cdk/table';\nimport { AfterViewInit, Component, HostBinding, HostListener, QueryList } from '@angular/core';\nimport { ColumnDefDirective } from '../../directives/column-def.directive';\n\n@Component({\n  selector: 'table[dg-table]',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n\n  providers: [\n    { provide: CdkTable, useExisting: TableComponent }\n  ]\n})\nexport class TableComponent<T> extends CdkTable<T> implements AfterViewInit {\n  @HostBinding('style.gridTemplateColumns')\n  public get gridTemplateColumns(): string {\n    let columns = Array.from(this._contentHeaderRowDefs.first.columns);\n\n    return (this._contentColumnDefs as QueryList<ColumnDefDirective>)\n      .filter(({ name: column }) => columns.includes(column))\n      .map(({ size }) => size)\n      .join(' ');\n  }\n\n  @HostListener('window:resize')\n  public updateStickyStyles(): void {\n    this.updateStickyHeaderRowStyles();\n    this.updateStickyFooterRowStyles();\n    this.updateStickyColumnStyles();\n  }\n\n  public ngAfterViewInit(): void {\n    this.updateStickyStyles();\n  }\n}\n","import { CdkColumnDef } from '@angular/cdk/table';\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[dgColumnDef]',\n\n  providers: [\n    { provide: CdkColumnDef, useExisting: ColumnDefDirective }\n  ]\n})\nexport class ColumnDefDirective extends CdkColumnDef {\n  @Input('dgColumnDef')\n  public name!: string;\n\n  @Input()\n  public size: string = 'auto';\n\n  @Input()\n  public sticky: boolean = false;\n\n  @Input()\n  public stickyEnd: boolean = false;\n}\n","import { CdkCellDef as CdkContentCellDef } from '@angular/cdk/table';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[dgContentCellDef]',\n\n  providers: [\n    { provide: CdkContentCellDef, useExisting: ContentCellDefDirective }\n  ]\n})\nexport class ContentCellDefDirective extends CdkContentCellDef {}\n","import { CdkCellOutlet as CdkContentCellOutlet } from '@angular/cdk/table';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[dgContentCellOutlet]',\n\n  providers: [\n    { provide: CdkContentCellOutlet, useExisting: ContentCellOutletDirective }\n  ]\n})\nexport class ContentCellOutletDirective extends CdkContentCellOutlet {}\n","import { CdkRowDef as CdkContentRowDef } from '@angular/cdk/table';\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[dgContentRowDef]',\n\n  providers: [\n    { provide: CdkContentRowDef, useExisting: ContentRowDefDirective }\n  ]\n})\nexport class ContentRowDefDirective<T> extends CdkContentRowDef<T> {\n  @Input('dgContentRowDefColumns')\n  public columns!: Iterable<string>;\n\n  @Input('dgContentRowDefWhen')\n  public when: (index: number, rowData: T) => boolean = () => true;\n}\n","import { DataRowOutlet as ContentRowOutlet } from '@angular/cdk/table';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[dgContentRowOutlet]',\n\n  providers: [\n    { provide: ContentRowOutlet, useExisting: ContentRowOutletDirective }\n  ]\n})\nexport class ContentRowOutletDirective extends ContentRowOutlet {}\n","import { CdkFooterCellDef } from '@angular/cdk/table';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[dgFooterCellDef]',\n\n  providers: [\n    { provide: CdkFooterCellDef, useExisting: FooterCellDefDirective }\n  ]\n})\nexport class FooterCellDefDirective extends CdkFooterCellDef {}\n","import { CdkCellOutlet as CdkFooterCellOutlet } from '@angular/cdk/table';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[dgFooterCellOutlet]',\n\n  providers: [\n    { provide: CdkFooterCellOutlet, useExisting: FooterCellOutletDirective }\n  ]\n})\nexport class FooterCellOutletDirective extends CdkFooterCellOutlet {}\n","import { CdkFooterRowDef } from '@angular/cdk/table';\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[dgFooterRowDef]',\n\n  providers: [\n    { provide: CdkFooterRowDef, useExisting: FooterRowDefDirective }\n  ]\n})\nexport class FooterRowDefDirective extends CdkFooterRowDef {\n  @Input('dgFooterRowDef')\n  public columns!: Iterable<string>;\n\n  @Input('dgFooterRowDefSticky')\n  public sticky: boolean = false;\n}\n","import { FooterRowOutlet } from '@angular/cdk/table';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[dgFooterRowOutlet]',\n\n  providers: [\n    { provide: FooterRowOutlet, useExisting: FooterRowOutletDirective }\n  ]\n})\nexport class FooterRowOutletDirective extends FooterRowOutlet {}\n","import { CdkHeaderCellDef } from '@angular/cdk/table';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[dgHeaderCellDef]',\n\n  providers: [\n    { provide: CdkHeaderCellDef, useExisting: HeaderCellDefDirective }\n  ]\n})\nexport class HeaderCellDefDirective extends CdkHeaderCellDef {}\n","import { CdkCellOutlet as CdkHeaderCellOutlet } from '@angular/cdk/table';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[dgHeaderCellOutlet]',\n\n  providers: [\n    { provide: CdkHeaderCellOutlet, useExisting: HeaderCellOutletDirective }\n  ]\n})\nexport class HeaderCellOutletDirective extends CdkHeaderCellOutlet {}\n","import { CdkHeaderRowDef } from '@angular/cdk/table';\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[dgHeaderRowDef]',\n\n  providers: [\n    { provide: CdkHeaderRowDef, useExisting: HeaderRowDefDirective }\n  ]\n})\nexport class HeaderRowDefDirective extends CdkHeaderRowDef {\n  @Input('dgHeaderRowDef')\n  public columns!: Iterable<string>;\n\n  @Input('dgHeaderRowDefSticky')\n  public sticky: boolean = false;\n}\n","import { HeaderRowOutlet } from '@angular/cdk/table';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[dgHeaderRowOutlet]',\n\n  providers: [\n    { provide: HeaderRowOutlet, useExisting: HeaderRowOutletDirective }\n  ]\n})\nexport class HeaderRowOutletDirective extends HeaderRowOutlet {}\n","import { NgModule } from '@angular/core';\n\n// Modules\nimport { FoundationModule } from '@datagazer/foundation';\n\nconst modules = [\n  FoundationModule\n];\n\n// Components\nimport { ContentCellComponent } from './components/table/content-cell/content-cell.component';\nimport { ContentRowComponent } from './components/table/content-row/content-row.component';\nimport { FooterCellComponent } from './components/table/footer-cell/footer-cell.component';\nimport { FooterRowComponent } from './components/table/footer-row/footer-row.component';\nimport { HeaderCellComponent } from './components/table/header-cell/header-cell.component';\nimport { HeaderRowComponent } from './components/table/header-row/header-row.component';\nimport { TableComponent } from './components/table/table.component';\n\nconst components = [\n  ContentCellComponent,\n  ContentRowComponent,\n  FooterCellComponent,\n  FooterRowComponent,\n  HeaderCellComponent,\n  HeaderRowComponent,\n  TableComponent\n];\n\n// Directives\nimport { ColumnDefDirective } from './directives/column-def.directive';\nimport { ContentCellDefDirective } from './directives/content-cell-def.directive';\nimport { ContentCellOutletDirective } from './directives/content-cell-outlet.directive';\nimport { ContentRowDefDirective } from './directives/content-row-def.directive';\nimport { ContentRowOutletDirective } from './directives/content-row-outlet.directive';\nimport { FooterCellDefDirective } from './directives/footer-cell-def.directive';\nimport { FooterCellOutletDirective } from './directives/footer-cell-outlet.directive';\nimport { FooterRowDefDirective } from './directives/footer-row-def.directive';\nimport { FooterRowOutletDirective } from './directives/footer-row-outlet.directive';\nimport { HeaderCellDefDirective } from './directives/header-cell-def.directive';\nimport { HeaderCellOutletDirective } from './directives/header-cell-outlet.directive';\nimport { HeaderRowDefDirective } from './directives/header-row-def.directive';\nimport { HeaderRowOutletDirective } from './directives/header-row-outlet.directive';\n\nconst directives = [\n  ColumnDefDirective,\n  ContentCellDefDirective,\n  ContentCellOutletDirective,\n  ContentRowDefDirective,\n  ContentRowOutletDirective,\n  FooterCellDefDirective,\n  FooterCellOutletDirective,\n  FooterRowDefDirective,\n  FooterRowOutletDirective,\n  HeaderCellDefDirective,\n  HeaderCellOutletDirective,\n  HeaderRowDefDirective,\n  HeaderRowOutletDirective\n];\n\n@NgModule({\n  imports: [\n    ...modules\n  ],\n\n  declarations: [\n    ...components,\n    ...directives\n  ],\n\n  exports: [\n    ...modules,\n    ...components,\n    ...directives\n  ]\n})\nexport class DataTableModule {}\n"]}
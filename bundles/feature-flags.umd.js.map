{"version":3,"file":"feature-flags.umd.js","sources":["ng://@datagazer/feature-flags/lib/services/feature-flags.service.ts","ng://@datagazer/feature-flags/lib/directives/feature-flag.directive.ts","ng://@datagazer/feature-flags/lib/guards/feature-flag.guard.ts","ng://@datagazer/feature-flags/lib/feature-flags.module.ts"],"sourcesContent":["import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { FeatureFlags } from '../types/feature-flags';\n\nexport const FEATURE_FLAGS = new InjectionToken<FeatureFlags>('Feature Flags');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeatureFlagsService {\n  constructor(\n    @Inject(FEATURE_FLAGS)\n    private readonly _featureFlags: FeatureFlags\n  ) {}\n\n  public isEnabled(feature: string): boolean {\n    return Boolean(this._featureFlags[feature]);\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { FeatureFlagsService } from '../services/feature-flags.service';\n\n@Directive({\n  selector: '[dgFeatureFlag]'\n})\nexport class FeatureFlagDirective {\n  @Input()\n  public set dgFeatureFlag(feature: string) {\n    this._viewContainerRef.clear();\n\n    if (this._featureFlags.isEnabled(feature)) {\n      this._viewContainerRef.createEmbeddedView(this._templateRef);\n    }\n  }\n\n  constructor(\n    private readonly _templateRef: TemplateRef<never>,\n    private readonly _viewContainerRef: ViewContainerRef,\n\n    private readonly _featureFlags: FeatureFlagsService\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { FeatureFlagsService } from '../services/feature-flags.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeatureFlagGuard implements CanActivate {\n  constructor(\n    private readonly _featureFlags: FeatureFlagsService\n  ) {}\n\n  public canActivate({ data: { feature } }: ActivatedRouteSnapshot): boolean {\n    return this._featureFlags.isEnabled(feature);\n  }\n}\n","import { NgModule } from '@angular/core';\n\n// Modules\nimport { FoundationModule } from '@datagazer/foundation';\n\nconst modules = [\n  FoundationModule\n];\n\n// Directives\nimport { FeatureFlagDirective } from './directives/feature-flag.directive';\n\nconst directives = [\n  FeatureFlagDirective\n];\n\n@NgModule({\n  imports: [\n    ...modules\n  ],\n\n  declarations: [\n    ...directives\n  ],\n\n  exports: [\n    ...modules,\n    ...directives\n  ]\n})\nexport class FeatureFlagsModule {}\n"],"names":["InjectionToken","Injectable","Inject","Directive","TemplateRef","ViewContainerRef","Input","FoundationModule","NgModule"],"mappings":";;;;;;QAGa,aAAa,GAAG,IAAIA,mBAAc,CAAe,eAAe,CAAC,CAAC;AAE/E;QAIE,6BAEmB,aAA2B;YAA3B,kBAAa,GAAb,aAAa,CAAc;SAC1C;QAEG,uCAAS,GAAhB,UAAiB,OAAe;YAC9B,OAAO,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;SAC7C;;oBAXFC,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;oDAGIC,WAAM,SAAC,aAAa;;;kCAVzB;KAKA;;;QCWE,8BACmB,YAAgC,EAChC,iBAAmC,EAEnC,aAAkC;YAHlC,iBAAY,GAAZ,YAAY,CAAoB;YAChC,sBAAiB,GAAjB,iBAAiB,CAAkB;YAEnC,kBAAa,GAAb,aAAa,CAAqB;SACjD;QAdJ,sBACW,+CAAa;iBADxB,UACyB,OAAe;gBACtC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;gBAE/B,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;oBACzC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAC9D;aACF;;;WAAA;;oBAXFC,cAAS,SAAC;wBACT,QAAQ,EAAE,iBAAiB;qBAC5B;;;;oBAL0BC,gBAAW;oBAAEC,qBAAgB;oBAC/C,mBAAmB;;;oCAMzBC,UAAK;;QAeR,2BAAC;KAnBD;;;QCKE,0BACmB,aAAkC;YAAlC,kBAAa,GAAb,aAAa,CAAqB;SACjD;QAEG,sCAAW,GAAlB,UAAmB,EAA6C;gBAAnC,yBAAO;YAClC,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SAC9C;;oBAVFL,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;oBAJQ,mBAAmB;;;+BAF5B;KAIA;;;;;;;;;;;;;;;;;;;;;;ICJA,IAKM,OAAO,GAAG;QACdM,2BAAgB;KACjB,CAAC;IAEF,IAGM,UAAU,GAAG;QACjB,oBAAoB;KACrB,CAAC;AAEF;QAAA;SAckC;;oBAdjCC,aAAQ,SAAC;wBACR,OAAO,WACF,OAAO,CACX;wBAED,YAAY,WACP,UAAU,CACd;wBAED,OAAO,WACF,OAAO,EACP,UAAU,CACd;qBACF;;QACgC,yBAAC;KAdlC;;;;;;;;;;;;;;;;"}